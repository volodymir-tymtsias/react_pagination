{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pages","Math","ceil","className","classNames","disabled","href","onClick","map","page","active","handlerOnClickPage","length","items","App","useState","setPerPage","setCurrentPage","beginItem","endItem","id","value","onChange","event","target","htmlFor","slice","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAQX,EAAW,EAAGY,KAAKC,KAAKN,EAAQC,IAoB9C,OACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CACEC,SAA0B,IAAhBP,IAJhB,SAQE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBR,EACfS,QArBmB,WACL,IAAhBT,GACFC,EAAaD,EAAc,IAczB,oBAUDE,EAAMQ,KAAI,SAAAC,GACT,OACE,oBACEN,UAAWC,IACT,YACA,CACEM,OAAQD,IAASX,IAJvB,SASE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,YArDM,SAACE,GACtBA,IAASX,GACXC,EAAaU,GAoDHE,CAAmBF,IALvB,SAQGA,KAVEA,MAeX,oBACEN,UAAWC,IACT,YACA,CACEC,SAAUP,IAAgBE,EAAMY,SAJtC,SAQE,mBACE,UAAQ,WACRT,UAAU,YACVG,KAAK,QACL,gBAAeR,IAAgBE,EAAMY,OACrCL,QArEmB,WACrBT,IAAgBE,EAAMY,QACxBb,EAAaD,EAAc,IA8DzB,wBClFFe,EAAQxB,EAAW,EADA,IAEtBmB,KAAI,SAAAf,GAAC,qBAAYA,MAEPqB,EAAgB,WAC3B,MAA8BC,mBAAS,KAAvC,mBAAOlB,EAAP,KAAgBmB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOjB,EAAP,KAAoBmB,EAApB,KACMC,GAAarB,EAAUC,GAAeD,EAAU,EAChDsB,GAAYtB,EAAUC,EARL,OAUlBD,EAAUC,EAEf,OACE,sBAAKK,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWL,EADX,mBACiCoB,EADjC,cACgDC,EADhD,eAhBmB,GAgBnB,OAIA,sBAAKhB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,MAAOxB,EACPyB,SAAU,SAACC,GACTP,EAAWO,EAAMC,OAAOH,OACxBJ,EAAe,IAPnB,UAUE,wBAAQI,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBtB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEP,MA7CiB,GA8CjBC,SAAUA,EACVC,YAAaA,EACbC,aAAc,SAACU,GACbQ,EAAeR,MAInB,6BACGI,EAAMa,MAAMR,EAAY,EAAGC,GAASX,KAAI,SAAAmB,GACvC,OACE,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC1DpCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ddd173f3.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pages = getNumbers(1, Math.ceil(total / perPage));\n\n  const handlerOnClickPage = (page: number) => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  const handlerOnClickNext = () => {\n    if (currentPage !== pages.length) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const handlerOnClickPrev = () => {\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames(\n          'page-item',\n          {\n            disabled: currentPage === 1,\n          },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handlerOnClickPrev}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(page => {\n        return (\n          <li\n            className={classNames(\n              'page-item',\n              {\n                active: page === currentPage,\n              },\n            )}\n            key={page}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => {\n                handlerOnClickPage(page);\n              }}\n            >\n              {page}\n            </a>\n          </li>\n        );\n      })}\n      <li\n        className={classNames(\n          'page-item',\n          {\n            disabled: currentPage === pages.length,\n          },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pages.length}\n          onClick={handlerOnClickNext}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst totalNumberItems = 42;\nconst items = getNumbers(1, totalNumberItems)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState('5');\n  const [currentPage, setCurrentPage] = useState(1);\n  const beginItem = +perPage * currentPage - +perPage + 1;\n  const endItem = (+perPage * currentPage > totalNumberItems)\n    ? totalNumberItems\n    : +perPage * currentPage;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${beginItem} - ${endItem} of ${totalNumberItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event) => {\n              setPerPage(event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalNumberItems}\n        perPage={+perPage}\n        currentPage={currentPage}\n        onPageChange={(page) => {\n          setCurrentPage(page);\n        }}\n      />\n\n      <ul>\n        {items.slice(beginItem - 1, endItem).map(item => {\n          return (\n            <li data-cy=\"item\" key={item}>\n              {item}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}